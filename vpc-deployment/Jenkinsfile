node {
  def credentialsId = 'git-ssh-key'
  def tf_checkout_dir = 'tf-modules'
  def tf_state_bucket = "${TF_STATE_BUCKET}"

  def operation = "${OPERATION}"

  def backend_config = [
    bucket: tf_state_bucket,
    key: "terraform/backend/${REGION}/vpc_infra/terraform.tfstate",
    region: "${REGION}",
    encrypt: true
  ]
  stage("Checking out TerraForm modules repo") {
    checkout poll:false, scm: [
      $class: 'GitSCM',
      branches: [[name: "${TF_GIT_BRANCH}"]],
      extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: tf_checkout_dir ]],
      submoduleCfg: [],
      userRemoteConfigs: [[url: "${TF_GIT_URL}", credentialsId: credentialsId]]
      ]
  }

  stage("Install Terraform") {
    terraform_install()
  }
}

def terraform_install() {
  sh("""
  #! /bin/bash

  if [ ! -d ${JENKINS_HOME}/custom_tools ]; then
     mkdir -p ${JENKINS_HOME}/custom_tools
  fi

  if [ ! -f ${JENKINS_HOME}/custom_tools/terraform ]; then
     sudo apt install -y unzip jq
     TERRAFORM_VERSION=\$(curl https://api.github.com/repos/hashicorp/terraform/releases/latest | jq '.tag_name' | tr -d '"' | tr -d v)
     DOWNLOAD_URL=https://releases.hashicorp.com/terraform/\${TERRAFORM_VERSION}/terraform_\${TERRAFORM_VERSION}_linux_amd64.zip
     echo \$TERRAFORM_VERSION
     curl -o /tmp/terraform_\$TERRAFORM_VERSION.zip \$DOWNLOAD_URL
     unzip /tmp/terraform_\$TERRAFORM_VERSION.zip -d $JENKINS_HOME/custom_tools
     echo "plugin_cache_dir   = \\"$JENKINS_HOME/.terraform.d/plugin-cache\\"" > $JENKINS_HOME/.terraformrc
  fi
   """)
}
